import { useState, useEffect } from "react";
import styled, { keyframes } from "styled-components";

// –ê–Ω–∏–º–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è —Å–º–∞–π–ª–∏–∫–æ–≤ –≤ —Ä–∞–∑–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã
const floatAnimation = keyframes`
    from {
        transform: translate(0, 0) scale(1);
        opacity: 1;
    }
    to {
        transform: translate(
                ${() => Math.random() * 100 - 50}px,
                ${() => Math.random() * -100 - 50}vh
        ) scale(${() => Math.random() * 1.5 + 0.5});
        opacity: 0;
    }
`;

// –≠–ª–µ–º–µ–Ω—Ç —Å–º–∞–π–ª–∏–∫–∞
const Emoji = styled.div`
  position: absolute;
  font-size: ${({ size }) => size}rem;
  left: ${({ left }) => left}%;
  top: ${({ top }) => top}%;
  animation: ${floatAnimation} ${({ duration }) => duration}s linear forwards;
`;

// –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const Container = styled.div`
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    background: linear-gradient(135deg, #ff9a9e 0%, #fad0c4 100%);
    font-family: "Arial", sans-serif;
    text-align: center;
    position: relative;
    overflow: hidden; /* –ß—Ç–æ–±—ã —Å–º–∞–π–ª—ã –Ω–µ –≤—ã—Ö–æ–¥–∏–ª–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã —ç–∫—Ä–∞–Ω–∞ */
`;

// –ö–∞—Ä—Ç–æ—á–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π
const Card = styled.div`
    background: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    max-width: 400px;
    text-align: center;
`;

// –ö–Ω–æ–ø–∫–∞
const Button = styled.button`
    margin-top: 20px;
    padding: 10px 20px;
    border: none;
    background-color: #ff6b81;
    color: white;
    font-size: 16px;
    border-radius: 5px;
    cursor: pointer;
    transition: 0.3s;

    &:hover {
        background-color: #ff4757;
    }
`;

// –ú–∏–ª—ã–µ —Ñ—Ä–∞–∑—ã
const sweetMessages = [
    "–¢—ã –¥–µ–ª–∞–µ—à—å —ç—Ç–æ—Ç –º–∏—Ä —Å–≤–µ—Ç–ª–µ–µ üòä",
    "–¢—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ—Å–≤–µ—Ç–∏—Ç—å –¥–∞–∂–µ —Å–∞–º—ã–π —Å–µ—Ä—ã–π –¥–µ–Ω—å ‚ú®",
    "–ï—Å–ª–∏ –±—ã —è –º–æ–≥ –∑–∞–≥–∞–¥–∞—Ç—å –æ–¥–Ω–æ –∂–µ–ª–∞–Ω–∏–µ ‚Äî —è –±—ã –ø–æ–∂–µ–ª–∞–ª –≤–∏–¥–µ—Ç—å —Ç–≤–æ—é —É–ª—ã–±–∫—É —á–∞—â–µ ‚ù§Ô∏è",
    "–¢—ã ‚Äî —Å–∞–º–æ–µ –ø—Ä–∏—è—Ç–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –º–æ—ë–º —Ç–µ–ª–µ—Ñ–æ–Ω–µ üòä",
    "–ú–Ω–µ –ø—Ä–æ—Å—Ç–æ —Ö–æ—Ä–æ—à–æ, –∫–æ–≥–¥–∞ —Ç—ã —Ä—è–¥–æ–º",
    "–ö–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ —Ç—ã –ø–∏—à–µ—à—å, –º–æ–π –¥–µ–Ω—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ª—É—á—à–µ üíñ",
    "–¢—ã ‚Äî –∫–∞–∫ —É—é—Ç–Ω—ã–π –ø–ª–µ–¥ –≤ —Ö–æ–ª–æ–¥–Ω—ã–π –¥–µ–Ω—å, —Ç–µ–ø–ª–æ –∏ –ø—Ä–∏—è—Ç–Ω–æ üíõ",
    "–° —Ç–æ–±–æ–π –¥–∞–∂–µ –æ–±—ã—á–Ω—ã–π –¥–µ–Ω—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ—Å–æ–±–µ–Ω–Ω—ã–º üíï",
    "–¢—ã –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å —Ç–æ–ª—å–∫–æ —Å–∞–º–æ–µ –ª—É—á—à–µ–µ, –∏ —è –Ω–∞–¥–µ—é—Å—å, —á—Ç–æ —Ç—ã —ç—Ç–æ –∑–Ω–∞–µ—à—å ‚ú®",
    "–Ø –ø—Ä–æ—Å—Ç–æ —Ä–∞–¥, —á—Ç–æ —Ç—ã –µ—Å—Ç—å ‚ù§Ô∏è"
];

// –°–º–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ª–µ—Ç–∞—Ç—å
const emojis = ["‚ù§Ô∏è", "üíñ", "üòä", "‚ú®", "ü•∞", "üíõ", "üíï", "üòç"];

const App = () => {
    const [message, setMessage] = useState(sweetMessages[0]);
    const [floatingEmojis, setFloatingEmojis] = useState([]);

    // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–º–∞–π–ª–∏–∫–∞
    const addFloatingEmoji = () => {
        const newEmoji = {
            id: Date.now(),
            emoji: emojis[Math.floor(Math.random() * emojis.length)],
            left: Math.random() * 100, // –°–ª—É—á–∞–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ —à–∏—Ä–∏–Ω–µ
            top: Math.random() * 100, // –°–ª—É—á–∞–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –≤—ã—Å–æ—Ç–µ
            size: Math.random() * 1.5 + 1, // –°–ª—É—á–∞–π–Ω—ã–π —Ä–∞–∑–º–µ—Ä
            duration: Math.random() * 5 + 3 // –†–∞–∑–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏
        };

        setFloatingEmojis((prev) => [...prev, newEmoji]);

        // –£–¥–∞–ª—è–µ–º —Å–º–∞–π–ª–∏–∫ —á–µ—Ä–µ–∑ 5-8 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
        setTimeout(() => {
            setFloatingEmojis((prev) => prev.filter((e) => e.id !== newEmoji.id));
        }, newEmoji.duration * 1000);
    };

    // –ó–∞–ø—É—Å–∫–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –ø–æ—Ç–æ–∫ —Å–º–∞–π–ª–∏–∫–æ–≤ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    useEffect(() => {
        const interval = setInterval(() => {
            addFloatingEmoji();
        }, 1000); // –ö–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –Ω–æ–≤—ã–π —Å–º–∞–π–ª

        return () => clearInterval(interval);
    }, []);

    return (
        <Container>
            {/* –õ–µ—Ç–∞—é—â–∏–µ —Å–º–∞–π–ª–∏–∫–∏ */}
            {floatingEmojis.map((e) => (
                <Emoji
                    key={e.id}
                    left={e.left}
                    top={e.top}
                    size={e.size}
                    duration={e.duration}
                >
                    {e.emoji}
                </Emoji>
            ))}

            {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π */}
            <Card>
                <h2>{message}</h2>
                <Button onClick={() => setMessage(sweetMessages[Math.floor(Math.random() * sweetMessages.length)])}>
                    –ù–∞–∂–º–∏ –º–µ–Ω—è
                </Button>
            </Card>
        </Container>
    );
};

export default App;
